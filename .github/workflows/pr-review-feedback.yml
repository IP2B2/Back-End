name: PR Review Labeler

on:
  pull_request_review:
    types: [submitted]
  pull_request:
    types: [synchronize, reopened, opened, labeled, unlabeled]

permissions:
  pull-requests: write
  issues: write
  contents: read

jobs:
  label-review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const repo = context.repo;

            const { data: existingLabels } = await github.rest.issues.listLabelsOnIssue({
              owner: repo.owner,
              repo: repo.repo,
              issue_number: pr.number
            });
            const currentLabels = existingLabels.map(l => l.name);

            // Fetch all reviews and only consider latest per user
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: repo.owner,
              repo: repo.repo,
              pull_number: pr.number
            });

            const latestByUser = new Map();
            for (const review of reviews) {
              latestByUser.set(review.user.login, review);
            }

            const hasChangesRequested = [...latestByUser.values()].some(
              review => review.state === 'CHANGES_REQUESTED'
            );

            const hasConflicts = currentLabels.includes('has-conflicts');

            if (hasChangesRequested && !hasConflicts) {
              if (!currentLabels.includes('needs-work')) {
                await github.rest.issues.addLabels({
                  owner: repo.owner,
                  repo: repo.repo,
                  issue_number: pr.number,
                  labels: ['needs-work']
                });
              }
              if (currentLabels.includes('ready-to-run')) {
                await github.rest.issues.removeLabel({
                  owner: repo.owner,
                  repo: repo.repo,
                  issue_number: pr.number,
                  name: 'ready-to-run'
                }).catch(() => {});
              }
            } else if (!hasChangesRequested && currentLabels.includes('needs-work')) {
              await github.rest.issues.removeLabel({
                owner: repo.owner,
                repo: repo.repo,
                issue_number: pr.number,
                name: 'needs-work'
              }).catch(() => {});
            }
